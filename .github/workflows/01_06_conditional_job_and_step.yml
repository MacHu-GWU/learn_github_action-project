# ------------------------------------------------------------------------------
# Demonstrate how to run a job and step conditionally
#
# Reference:
#
# - job.<job_id>.if: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idif
# - jobs.<job_id>.steps[*].if: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsif
# - Logical operators: https://docs.github.com/en/actions/learn-github-actions/expressions#operators
# - Functions: https://docs.github.com/en/actions/learn-github-actions/expressions#functions
# - Context Availability: https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
# ------------------------------------------------------------------------------
name: 01_06_conditional_job_and_step
on:
  workflow_dispatch:
    inputs:
      job_type:
        description: 'job type'
        required: true
        default: 'build'
        type: choice
        options:
          - build
          - test

jobs:
  build_job:
    # note that env context is not available in jobs.<job_id>.if
    # so we have to use workflow_dispatch.inputs
    if: ${{ inputs.JOB_TYPE == 'build' }}
    runs-on: ubuntu-latest
    env:
      TASK_ID: 1
    steps:
      - name: build 1
        if: ${{ env.TASK_ID == '1' }} # note that env context is available in steps.<step_id>.if
        run: echo building 1
      - name: build 2
        if: ${{ env.TASK_ID == '2' }}
        run: echo building 2
  test_job:
    if: ${{ inputs.JOB_TYPE == 'test' }}
    runs-on: ubuntu-latest
    env:
      TASK_ID: 1
    steps:
      - name: test 1
        if: ${{ env.TASK_ID == '1' }}
        run: echo testing 1
      - name: test 2
        if: ${{ env.TASK_ID == '2' }}
        run: echo testing 2